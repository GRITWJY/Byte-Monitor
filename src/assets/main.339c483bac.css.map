{"version":3,"file":"static/css/main.339c483bac.css","mappings":"AAwIA,OACA,UACA","sources":["webpack://wjy-vue-tpl/./src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <button @click=\"handleVueError\">vue错误</button>\n    <button @click=\"handleJSError\">JS错误</button>\n    <button @click=\"handlePromiseError\">Promise错误</button>\n    <button @click=\"handleResourceError\">资源错误</button>\n    <input type=\"file\" id=\"handleResolve\" />\n\n    <br />\n    <hr />\n\n    <button @click=\"handleAjaxSuccess\">测试 ajax 请求-成功(axios)</button>\n    <button @click=\"handleAjaxFail\">测试 ajax 请求-失败(axios)</button>\n    <button @click=\"handleFetch\">测试 fetch 请求</button>\n\n    <div>\n      <h1 class=\"title\">hello app</h1>\n      <button type=\"primary\">按钮</button>\n      <ul>\n        <li>\n          <router-link to=\"/home\">Home</router-link>\n        </li>\n        <li>\n          <router-link to=\"/about\">About</router-link>\n        </li>\n      </ul>\n      <router-view />\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport sourceMap from \"source-map\";\n\nsourceMap.SourceMapConsumer.initialize({\n  \"lib/mappings.wasm\": \"https://unpkg.com/source-map@0.7.3/lib/mappings.wasm\",\n});\nexport default {\n  name: \"App\",\n  mounted() {\n    let upload = document.getElementById(\"handleResolve\");\n    let _this = this;\n    upload.addEventListener(\"change\", function () {\n      let file = upload.files[0];\n      const reader = new FileReader();\n      reader.readAsText(file, \"UTF-8\");\n      reader.onload = async (event) => {\n        const look_source = await _this.lookSource(event.target.result, 1, 171);\n        console.log(look_source);\n      };\n    });\n  },\n  methods: {\n    async lookSource(source_map, line, column) {\n      try {\n        const consumer = await new sourceMap.SourceMapConsumer(source_map);\n        const sourcemapData = consumer.originalPositionFor({\n          line: line, // 压缩后的行数\n          column: column, // 压缩后的列数\n        });\n\n        if (!sourcemapData.source) return;\n\n        const sources = consumer.sources;\n        // 根据查到的source，到源文件列表中查找索引位置\n        const index = sources.indexOf(sourcemapData.source);\n        // 到源码列表中查到源代码\n        const content = consumer.sourcesContent[index];\n\n        // 将源代码串按\"行结束标记\"拆分为数组形式\n        const rawLines = content.split(/\\r?\\n/g);\n\n        // 截取报错行前后代码片段，因为数组索引从0开始，故行数需要-1\n        let code = [];\n        for (\n          let i = sourcemapData.line - 10;\n          i < sourcemapData.line + 10;\n          i++\n        ) {\n          if (i >= 0) {\n            code.push(rawLines[i]);\n          }\n        }\n        // 最后将解析结果和代码片段返回\n        console.log(code);\n        return { sourcemapData, code: code.join(\"\\n\") };\n      } catch (e) {\n        console.log(e);\n        return null;\n      }\n    },\n\n    handleVueError() {\n      let a = {};\n      a.toFixed(3);\n    },\n\n    handleJSError() {\n      setTimeout(() => {\n        this.father(); // JS错误\n      }, 1000);\n    },\n\n    handlePromiseError() {\n      new Promise((resolve, reject) => {\n        this.father();\n        resolve();\n      });\n    },\n    handleResourceError() {\n      let script = document.createElement(\"script\");\n      script.src = \"xx.js\";\n      document.body.appendChild(script);\n    },\n\n    handleAjaxSuccess() {\n      axios\n        .post(\"https://junesunray.com/llain/reply/get\", {\n          a: 3,\n        })\n        .then(() => {});\n    },\n    handleAjaxFail() {\n      axios.post(\"https://junesunray.com/llain/reply/et\", {}).then(() => {});\n    },\n    handleFetch() {\n      fetch(\"http://localhost:3000/movies.json\")\n        .then((response) => response.json())\n        .then((data) => console.log(data));\n    },\n  },\n};\n</script>\n\n<style>\n.title {\n  color: pink;\n}\n</style>\n"],"names":[],"sourceRoot":""}